version: '3.8'

services:
  # Removed setup service. Migrations should be run separately before deploy.
  staging_redis:
    container_name: branvia_redis_staging
    image: redis:alpine
    ports:
      - 6379
    volumes:
      - redis_data:/data
    restart: always
    command: redis-server --appendonly yes --maxmemory 512mb --maxmemory-policy noeviction
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - branvia_network_staging

  # BullMQ Worker service
  staging_worker:
    build:
      context: .
      dockerfile: docker/Dockerfile.worker
      args:
        DATABASE_URL: ${DATABASE_URL}
    env_file: .env
    environment:
      - DATABASE_URL=${DATABASE_URL}
    depends_on: 
      staging_redis:
        condition: service_healthy
    restart: always
    deploy:
      replicas: 2  # Reduced from 4 to 2 for 8GB RAM
      resources:
        limits:
          memory: 1G  # Reduced from 2G to 1G
        reservations:
          memory: 512M  # Reduced from 1G to 512M
    networks:
      - branvia_network_staging

  # Web application service
  staging_web:
    container_name: branvia_web_staging
    build:
      context: .
      dockerfile: docker/Dockerfile.web
      args:
        DATABASE_URL: ${DATABASE_URL}
        REDIS_URL: ${REDIS_URL}
        PAYPAL_CLIENT_ID: ${PAYPAL_CLIENT_ID}
        PAYPAL_CLIENT_SECRET: ${PAYPAL_CLIENT_SECRET}
        PAYPAL_MODE: ${PAYPAL_MODE}
        PAYPAL_BASE_URL: ${PAYPAL_BASE_URL}
        TRUSTED_ORIGINS: ${TRUSTED_ORIGINS}
        NEXT_PUBLIC_APP_URL: ${NEXT_PUBLIC_APP_URL}
        NEXT_PUBLIC_PAYPAL_STARTER_PLAN_ID: ${NEXT_PUBLIC_PAYPAL_STARTER_PLAN_ID}
        NEXT_PUBLIC_PAYPAL_PROFESSIONAL_PLAN_ID: ${NEXT_PUBLIC_PAYPAL_PROFESSIONAL_PLAN_ID}
        NEXT_PUBLIC_PAYPAL_ENTERPRISE_PLAN_ID: ${NEXT_PUBLIC_PAYPAL_ENTERPRISE_PLAN_ID}
        NEXT_PUBLIC_AWS_S3_BUCKET_NAME: ${NEXT_PUBLIC_AWS_S3_BUCKET_NAME}
        NEXT_PUBLIC_AWS_REGION: ${NEXT_PUBLIC_AWS_REGION}
        AWS_REGION: ${AWS_REGION}
        AWS_ACCESS_KEY_ID: ${AWS_ACCESS_KEY_ID}
        AWS_SECRET_ACCESS_KEY: ${AWS_SECRET_ACCESS_KEY}
        AWS_S3_BUCKET_NAME: ${AWS_S3_BUCKET_NAME}
    env_file: .env
    depends_on:
      staging_redis:
        condition: service_healthy
    restart: always
    ports:
      - 3000
    deploy:
      resources:
        limits:
          memory: 512M  # Reduced from 1G to 512M for 8GB RAM
        reservations:
          memory: 256M  # Reduced from 512M to 256M
    networks:
      - branvia_network_staging

networks:
  branvia_network_staging:
    driver: bridge

volumes:
  redis_data:
  caddy_data:
  caddy_config: 